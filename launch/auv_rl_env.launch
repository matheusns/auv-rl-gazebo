<launch>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="set_timeout" default="false"/>
  <arg name="timeout" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="worlds/auv_rl.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
    <arg name="verbose" value="true" />
  </include>



  <include file="$(find uuv_assistants)/launch/publish_world_ned_frame.launch"/>
  <!-- Include static tf between the fiducials ang the cage in order to get the docking starting point ground thruth  -->
  <include file="$(find auv_rl_gazebo)/launch/cage_gt_tf.launch"/>
  
  <node name="publish_world_models"
        pkg="uuv_assistants"
        type="publish_world_models.py"
        output="screen">
        <rosparam subst_value="true">
            meshes:
                auv_rl_seabed:
                    mesh: package://auv_rl_gazebo/models/auv_rl_seabed/meshes/seabed_with_noise.dae
                    pose:
                        position: [0, 0, -99]
                        scale: [2, 2, 1]
                auv_rl_cage:
                    mesh: package://auv_rl_gazebo/models/auv_rl_cage/meshes/cage.dae
                    pose:
                        position: [10, 22, -98]
                        orientation: [0, 0, 1.57]
                surface:
                    plane: [180, 180, 0.1]
                    pose:
                        position: [0, 0, 0]
                bottom:
                    plane: [180, 180, 0.1]
                    pose:
                        position: [0, 0, -100]
                north_wall:
                    plane: [180, 0.1, 100]
                    pose:
                        position: [0, 90, -50.0]
                south_wall:
                    plane: [180, 0.1, 100]
                    pose:
                        position: [0, -90, -50.0]
                east_wall:
                    plane: [0.1, 180, 100]
                    pose:
                        position: [90, 0, -50.0]
                west_wall:
                    plane: [0.1, 180, 100]
                    pose:
                        position: [-90, 0, -50.0]
        </rosparam>
  </node>

  <group if="$(arg set_timeout)">
    <include file="$(find uuv_assistants)/launch/set_simulation_timer.launch">
      <arg name="timeout" value="$(arg timeout)"/>
    </include>
  </group>
</launch>
